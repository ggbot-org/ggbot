{
  "name": "ggbot2",
  "description": "crypto flow",
  "homepage": "http://ggbot2.com",
  "version": "0.0.0",
  "private": true,
  "type": "module",
  "license": "UNLICENSED",
  "author": "Gianluca Casati (http://fibo.github.io/)",
  "scripts": {
    "build": "npm run build -w repository && npm run build:binance-proxy && npm run build:executor && npm run build:webapp && npm run build:authentication-api && npm run build:user-api && npm run build:public-api",
    "build:admin-api": "npm run build -w admin-api",
    "build:authentication-api": "npm run build -w authentication-api",
    "build:binance-proxy": "npm run build -w binance-proxy",
    "build:executor": "npm run build -w executor",
    "build:public-api": "npm run build -w public-api",
    "build:user-api": "npm run build -w user-api",
    "build:utrust-api": "npm run build -w utrust-api",
    "build:webapp": "npm run build -w webapp",
    "check_types": "npm run check_types --workspaces --if-present",
    "cleanup": "npm run cleanup --workspaces --if-present",
    "deploy_api": "npm run deploy:admin-api && npm run deploy:authentication-api && npm run build:public-api && npm run build:utrust-api",
    "deploy:admin-api": "npm run deploy -w admin-api",
    "deploy:authentication-api": "npm run deploy -w authentication-api",
    "deploy:public-api": "npm run deploy -w public-api",
    "deploy:user-api": "npm run deploy -w user-api",
    "deploy:utrust-api": "npm run deploy -w utrust-api",
    "deploy:webapp": "npm run deploy -w webapp",
    "generate_docs": "npm run generate_docs -w repository",
    "lint": "npm run lint --workspaces --if-present",
    "lint-staged": "lint-staged",
    "prebuild:admin-api": "npm run build -w env && npm run build -w models && npm run build -w cache && npm run build -w binance && npm run build -w aws && npm run build -w binance-client && npm run build -w dflow && npm run build -w email-messages && npm run build -w locators && npm run build -w logging && npm run build -w http && npm run build -w api && npm run build -w authentication && npm run build -w api-gateway && npm run build -w database",
    "prebuild:authentication-api": "npm run build -w env && npm run build -w models && npm run build -w cache && npm run build -w binance && npm run build -w aws && npm run build -w binance-client && npm run build -w dflow && npm run build -w email-messages && npm run build -w locators && npm run build -w logging && npm run build -w http && npm run build -w api && npm run build -w api-gateway && npm run build -w authentication && npm run build -w database",
    "prebuild:binance-proxy": "npm run build -w env && npm run build -w cache && npm run build -w aws && npm run build -w binance && npm run build -w logging && npm run build -w http",
    "prebuild:executor": "npm run build -w cache && npm run build -w binance && npm run build -w env && npm run build -w models && npm run build -w aws && npm run build -w binance-client && npm run build -w dflow && npm run build -w email-messages && npm run build -w locators && npm run build -w logging && npm run build -w database",
    "prebuild:public-api": "npm run build -w env && npm run build -w models && npm run build -w cache && npm run build -w binance && npm run build -w aws && npm run build -w binance-client && npm run build -w dflow && npm run build -w email-messages && npm run build -w locators && npm run build -w logging && npm run build -w http && npm run build -w api && npm run build -w api-gateway && npm run build -w database",
    "prebuild:user-api": "npm run build -w env && npm run build -w models && npm run build -w cache && npm run build -w binance && npm run build -w aws && npm run build -w binance-client && npm run build -w dflow && npm run build -w email-messages && npm run build -w locators && npm run build -w logging && npm run build -w http && npm run build -w api && npm run build -w api-gateway && npm run build -w authentication && npm run build -w database",
    "prebuild:utrust-api": "npm run build -w env && npm run build -w models && npm run build -w cache && npm run build -w binance && npm run build -w aws && npm run build -w binance-client && npm run build -w dflow && npm run build -w email-messages && npm run build -w locators && npm run build -w logging && npm run build -w http && npm run build -w api && npm run build -w api-gateway && npm run build -w database",
    "prebuild:webapp": "npm run build -w env && npm run build -w cache && npm run build -w binance && npm run build -w http && npm run build -w models && npm run build -w api && npm run build -w dflow && npm run build -w locators",
    "precleanup": "npm run remove_node_modules",
    "predeploy:admin-api": "npm run build:admin-api",
    "predeploy:webapp": "npm run build:webapp",
    "predeploy:authentication-api": "npm run build:authentication-api",
    "predeploy:public-api": "npm run build:public-api",
    "predeploy:user-api": "npm run build:user-api",
    "predeploy:utrust-api": "npm run build:utrust-api",
    "push_infrastructure": "npm run push_infrastructure -w infrastructure",
    "remove_node_modules": "rm -rf node_modules/ */node_modules/",
    "set_environment:admin-api": "npm run set_environment -w admin-api",
    "set_environment:authentication-api": "npm run set_environment -w authentication-api",
    "set_environment:public-api": "npm run set_environment -w public-api",
    "set_environment:user-api": "npm run set_environment -w user-api",
    "set_environment:utrust-api": "npm run set_environment -w utrust-api",
    "set_memory_size:admin-api": "npm run set_memory_size -w admin-api",
    "set_memory_size:authentication-api": "npm run set_memory_size -w authentication-api",
    "set_memory_size:public-api": "npm run set_memory_size -w public-api",
    "set_memory_size:user-api": "npm run set_memory_size -w user-api",
    "set_memory_size:utrust-api": "npm run set_memory_size -w utrust-api",
    "set_timeout:admin-api": "npm run set_timeout -w admin-api",
    "set_timeout:authentication-api": "npm run set_timeout -w authentication-api",
    "set_timeout:public-api": "npm run set_timeout -w public-api",
    "set_timeout:user-api": "npm run set_timeout -w user-api",
    "set_timeout:utrust-api": "npm run set_timeout -w utrust-api",
    "start": "npm run start:webapp",
    "start:admin": "npm run start -w admin",
    "start:binance-proxy": "npm run start -w binance-proxy",
    "start:executor": "npm run start -w executor",
    "start:webapp": "npm run start -w webapp",
    "test": "npm run test --workspaces --if-present 1> /dev/null",
    "test_infrastructure": "npm run test_infrastructure -w infrastructure",
    "test_repository": "npm run test -w repository",
    "ts-prune": "ts-prune --error --ignore 'dist|temp' --project ./tsconfig.prune.json"
  },
  "devDependencies": {
    "@types/node": "20.4.9",
    "lint-staged": "13.2.2",
    "pre-commit": "1.2.2",
    "prettier": "3.0.2",
    "prettier-plugin-jsdoc": "1.0.1",
    "prettier-plugin-sh": "0.13.1",
    "ts-prune": "0.10.3",
    "typescript": "5.0.4"
  },
  "lint-staged": {
    "*.{js,ts,tsx}": [
      "prettier --write",
      "eslint --fix"
    ],
    "*.{cjs,css,json,md,scss,sh}": [
      "prettier --write"
    ]
  },
  "pre-commit": [
    "lint-staged",
    "ts-prune",
    "check_types",
    "test"
  ],
  "prettier": {
    "semi": false,
    "trailingComma": "none",
    "plugins": [
      "prettier-plugin-jsdoc",
      "prettier-plugin-sh"
    ],
    "overrides": [
      {
        "files": [
          "*.ts",
          "*.tsx"
        ],
        "options": {
          "tsdoc": true
        }
      }
    ]
  },
  "workspaces": [
    "admin-api",
    "api",
    "api-gateway",
    "arithmetic",
    "authentication",
    "authentication-api",
    "aws",
    "binance",
    "binance-client",
    "binance-proxy",
    "cache",
    "database",
    "dflow",
    "email-messages",
    "env",
    "eslint-config",
    "executor",
    "http",
    "infrastructure",
    "locators",
    "logging",
    "models",
    "public-api",
    "repository",
    "tsconfig",
    "url-shortener",
    "user-api",
    "utrust-api",
    "webapp"
  ]
}
