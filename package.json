{
  "name": "ggbot2",
  "description": "crypto flow",
  "homepage": "http://ggbot2.com",
  "version": "0.0.0",
  "private": true,
  "type": "module",
  "license": "UNLICENSED",
  "author": "Gianluca Casati (http://fibo.github.io/)",
  "scripts": {
    "build": "npm run build:binance-proxy && npm run build:executor && npm run build:app && npm run build:authentication-api && npm run build:user-api && npm run build:public-api",
    "build:admin": "npm run build --workspace admin",
    "build:admin-api": "npm run build --workspace admin-api",
    "build:api": "npm run build --workspace api",
    "build:api-gateway": "npm run build --workspace api-gateway",
    "build:app": "npm run build --workspace app",
    "build:arithmetic": "npm run build --workspace arithmetic",
    "build:assets": "npm run build --workspace assets",
    "build:authentication": "npm run build --workspace authentication",
    "build:authentication-api": "npm run build --workspace authentication-api",
    "build:aws": "npm run build --workspace aws",
    "build:binance": "npm run build --workspace binance",
    "build:binance-client": "npm run build --workspace binance-client",
    "build:binance-proxy": "npm run build --workspace binance-proxy",
    "build:cache": "npm run build --workspace cache",
    "build:database": "npm run build --workspace database",
    "build:design": "npm run build --workspace design",
    "build:devops": "npm run build --workspace devops",
    "build:dflow": "npm run build --workspace dflow",
    "build:email-messages": "npm run build --workspace email-messages",
    "build:env": "npm run build --workspace env",
    "build:esbuild": "npm run build --workspace esbuild",
    "build:executor": "npm run build --workspace executor",
    "build:html": "npm run build --workspace html",
    "build:http": "npm run build --workspace http",
    "build:i18n": "npm run build --workspace i18n",
    "build:infrastructure": "npm run build --workspace infrastructure",
    "build:locators": "npm run build --workspace locators",
    "build:models": "npm run build --workspace models",
    "build:public-api": "npm run build --workspace public-api",
    "build:react": "npm run build --workspace react",
    "build:repo": "npm run build --workspace repo",
    "build:test-data": "npm run build --workspace test-data",
    "build:time": "npm run build --workspace time",
    "build:type-utils": "npm run build --workspace type-utils",
    "build:use-action": "npm run build --workspace use-action",
    "build:user-api": "npm run build --workspace user-api",
    "build:utrust-api": "npm run build --workspace utrust-api",
    "build:web-storage": "npm run build --workspace web-storage",
    "build:www": "npm run build --workspace www",
    "check_types": "npm run check_types --workspaces --if-present",
    "cleanup": "npm run cleanup --workspaces --if-present",
    "deploy:admin-api": "npm run deploy --workspace admin-api",
    "deploy:app": "npm run deploy --workspace app",
    "deploy:authentication-api": "npm run deploy --workspace authentication-api",
    "deploy:public-api": "npm run deploy --workspace public-api",
    "deploy:user-api": "npm run deploy --workspace user-api",
    "deploy:utrust-api": "npm run deploy --workspace utrust-api",
    "deploy:www": "npm run deploy --workspace www",
    "lint": "npm run lint --workspaces --if-present",
    "lint-staged": "lint-staged",
    "prebuild:admin-api": "npm run build:api-gateway && npm run build:authentication && npm run build:database",
    "prebuild:api": "npm run build:binance",
    "prebuild:api-gateway": "npm run build:api && npm run build:locators && npm run build:http",
    "prebuild:app": "npm run build:web-storage && npm run build:design && npm run build:dflow && npm run build:assets && npm run build:use-action && npm run build:repo && npm run build:esbuild && npm run build:html && npm run build:i18n",
    "prebuild:assets": "npm run build:locators",
    "prebuild:authentication": "npm run build:models",
    "prebuild:authentication-api": "npm run build:api-gateway && npm run build:authentication && npm run build:database",
    "prebuild:aws": "npm run build:infrastructure",
    "prebuild:binance": "npm run build:arithmetic && npm run build:models && npm run build:http && npm run build:cache",
    "prebuild:binance-proxy": "npm run build:env && npm run build:binance",
    "prebuild:cache": "npm run build:time",
    "prebuild:database": "npm run build:aws && npm run build:binance && npm run build:binance-client && npm run build:dflow && npm run build:email-messages && npm run build:test-data",
    "prebuild:design": "npm run build:time",
    "prebuild:dflow": "npm run build:binance",
    "prebuild:esbuild": "npm run build:env",
    "prebuild:executor": "npm run build:cache && npm run build:database",
    "prebuild:i18n": "npm run build:models",
    "prebuild:infrastructure": "npm run build:locators",
    "prebuild:locators": "npm run build:env",
    "prebuild:models": "npm run build:arithmetic && npm run build:cache",
    "prebuild:public-api": "npm run build:api-gateway && npm run build:database",
    "prebuild:time": "npm run build:type-utils",
    "prebuild:use-action": "npm run build:env && npm run build:api && npm run build:react",
    "prebuild:user-api": "npm run build:api-gateway && npm run build:authentication && npm run build:database",
    "prebuild:web-storage": "npm run build:env && npm run build:binance",
    "prebuild:www": "npm run build:design && npm run build:assets && npm run build:repo && npm run build:esbuild && npm run build:html && npm run build:i18n && npm run build:web-storage",
    "precleanup": "npm run remove_node_modules",
    "predeploy:admin-api": "npm run build:admin-api",
    "predeploy:app": "npm run build:app",
    "predeploy:authentication-api": "npm run build:authentication-api",
    "predeploy:design": "npm run build:design",
    "predeploy:public-api": "npm run build:public-api",
    "predeploy:user-api": "npm run build:user-api",
    "predeploy:utrust-api": "npm run build:utrust-api",
    "predeploy:www": "npm run build:www",
    "remove_node_modules": "rm -rf node_modules/ */node_modules/",
    "set_environment:admin-api": "npm run set_environment --workspace admin-api",
    "set_environment:authentication-api": "npm run set_environment --workspace authentication-api",
    "set_environment:public-api": "npm run set_environment --workspace public-api",
    "set_environment:user-api": "npm run set_environment --workspace user-api",
    "set_environment:utrust-api": "npm run set_environment --workspace utrust-api",
    "set_memory_size:admin-api": "npm run set_memory_size --workspace admin-api",
    "set_memory_size:authentication-api": "npm run set_memory_size --workspace authentication-api",
    "set_memory_size:public-api": "npm run set_memory_size --workspace public-api",
    "set_memory_size:user-api": "npm run set_memory_size --workspace user-api",
    "set_memory_size:utrust-api": "npm run set_memory_size --workspace utrust-api",
    "set_timeout:admin-api": "npm run set_timeout --workspace admin-api",
    "set_timeout:authentication-api": "npm run set_timeout --workspace authentication-api",
    "set_timeout:public-api": "npm run set_timeout --workspace public-api",
    "set_timeout:user-api": "npm run set_timeout --workspace user-api",
    "set_timeout:utrust-api": "npm run set_timeout --workspace utrust-api",
    "start": "npm run start:app",
    "start:admin": "npm run start --workspace admin",
    "start:app": "npm run start --workspace app",
    "start:binance-proxy": "npm run start --workspace binance-proxy",
    "start:design": "npm run start --workspace design",
    "start:executor": "npm run start --workspace executor",
    "start:www": "npm run start --workspace www",
    "task:create": "npm run task:create --workspace devops",
    "task:showDevopsPolicy": "npm run task:showDevopsPolicy --workspace devops",
    "test": "npm run test --workspaces --if-present 1> /dev/null",
    "test:arithmetic": "npm run test --workspace arithmetic",
    "test:binance": "npm run test --workspace binance",
    "test:dflow": "npm run test --workspace dflow",
    "test:executor": "npm run test --workspace executor",
    "test:html": "npm run test --workspace html",
    "test:models": "npm run test --workspace models",
    "test:repo": "npm run test --workspace repo",
    "test:time": "npm run test --workspace time",
    "ts-prune": "npm run ts-prune --workspaces --if-present"
  },
  "devDependencies": {
    "@types/node": "20.4.9",
    "lint-staged": "13.2.2",
    "pre-commit": "1.2.2",
    "prettier": "2.8.8",
    "prettier-plugin-jsdoc": "0.4.2",
    "prettier-plugin-sh": "0.12.8",
    "typescript": "5.0.4"
  },
  "lint-staged": {
    "*.{cjs,js,ts,tsx}": [
      "prettier --write",
      "eslint --fix"
    ],
    "*.{css,json,md,scss,sh}": [
      "prettier --write"
    ]
  },
  "pre-commit": [
    "lint-staged",
    "ts-prune",
    "check_types",
    "test"
  ],
  "prettier": {
    "plugins": [
      "prettier-plugin-jsdoc",
      "prettier-plugin-sh"
    ],
    "overrides": [
      {
        "files": [
          "*.ts",
          "*.tsx"
        ],
        "options": {
          "tsdoc": true
        }
      }
    ]
  },
  "workspaces": [
    "admin",
    "admin-api",
    "api",
    "api-gateway",
    "app",
    "arithmetic",
    "assets",
    "authentication",
    "authentication-api",
    "aws",
    "binance",
    "binance-client",
    "binance-proxy",
    "cache",
    "database",
    "design",
    "devops",
    "dflow",
    "email-messages",
    "env",
    "esbuild",
    "eslint-config",
    "executor",
    "html",
    "http",
    "i18n",
    "infrastructure",
    "locators",
    "models",
    "public-api",
    "react",
    "repo",
    "test-data",
    "time",
    "tsconfig",
    "type-utils",
    "use-action",
    "user-api",
    "utrust-api",
    "web-storage",
    "www"
  ]
}
