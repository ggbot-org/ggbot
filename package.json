{
  "name": "ggbot",
  "description": "crypto flow",
  "homepage": "https://ggbot.org",
  "version": "0.0.0",
  "private": true,
  "type": "module",
  "license": "UNLICENSED",
  "author": "Gianluca Casati (https://fibo.github.io/)",
  "scripts": {
    "build": "npm run build_workspaces -w repository",
    "build:api:admin": "npm run build -w api-admin",
    "build:api:auth": "npm run build -w api-auth",
    "build:api:public": "npm run build -w api-public",
    "build:api:stripe-action": "npm run build -w api-stripe-action",
    "build:api:stripe-webhook": "npm run build -w api-stripe-webhook",
    "build:api:user": "npm run build -w api-user",
    "build:binance-proxy": "npm run build -w binance-proxy",
    "build:executor": "npm run build -w executor",
    "build:webapp": "npm run build -w webapp",
    "check_types": "npm run check_types --workspaces --if-present",
    "cleanup": "npm run cleanup --workspaces --if-present",
    "create:api:user": "npm run create_api -w infrastructure api-user",
    "create:api:admin": "npm run create_api -w infrastructure api-admin",
    "create:api:auth": "npm run create_api -w infrastructure api-auth",
    "create:api:public": "npm run create_api -w infrastructure api-public",
    "create:api:stripe-action": "npm run create_api -w infrastructure api-stripe-action",
    "create:api:stripe-webhook": "npm run create_api -w infrastructure api-stripe-webhook",
    "deploy:api:user": "npm run deploy_api -w infrastructure api-user",
    "deploy:api:admin": "npm run deploy_api -w infrastructure api-admin",
    "deploy:api:auth": "npm run deploy_api -w infrastructure api-auth",
    "deploy:api:public": "npm run deploy_api -w infrastructure api-public",
    "deploy:api:stripe-action": "npm run deploy_api -w infrastructure api-stripe-action",
    "deploy:api:stripe-webhook": "npm run deploy_api -w infrastructure api-stripe-webhook",
    "deploy:webapp": "npm run deploy -w webapp",
    "e2e:apiRestrictions": "npm run e2e:apiRestrictions -w binance-proxy",
    "e2e:execute": "npm run e2e:execute -w executor",
    "e2e:listAccountKeys": "npm run e2e:listAccountKeys -w executor",
    "e2e:newOrder": "npm run e2e:newOrder -w binance-proxy",
    "e2e:sendEmail": "npm run e2e:sendEmail -w email-messages",
    "eslint": "eslint .",
    "eslint--fix": "eslint --fix .",
    "generate_docs": "npm run generate_docs -w repository && npm run markdownlint--fix",
    "generate_iam_policies": "npm run generate_iam_policies -w infrastructure",
    "git_pull": "git pull origin main --quiet --rebase",
    "install_dependencies": "npm ci",
    "lint-staged": "lint-staged --allow-empty",
    "markdownlint": "markdownlint-cli2 *.md */README.md */docs/*.md 1> /dev/null",
    "markdownlint--fix": "markdownlint-cli2 --fix *.md */README.md */docs/*.md",
    "prebuild:binance-proxy": "npm run build_workspace_dependencies -w repository binance-proxy",
    "prebuild:executor": "npm run build_workspace_dependencies -w repository executor",
    "prebuild:webapp": "npm run build_workspace_dependencies -w repository webapp",
    "prepare": "cp repository/src/git-hook/pre-commit.sh .git/hooks/pre-commit",
    "set_environment:api:admin": "npm run set_environment -w api-admin",
    "set_environment:api:auth": "npm run set_environment -w api-auth",
    "set_environment:api:public": "npm run set_environment -w api-public",
    "set_environment:api:stripe-action": "npm run set_environment -w api-stripe-action",
    "set_environment:api:stripe-webhook": "npm run set_environment -w api-stripe-webhook",
    "set_environment:api:user": "npm run set_environment -w api-user",
    "start": "npm run start:webapp",
    "start:binance-proxy": "npm run start -w binance-proxy",
    "start:executor": "npm run start -w executor",
    "start:webapp": "npm run start -w webapp",
    "stripe:create_webhook": "npm run  create_webhook -w stripe",
    "stylelint": "stylelint --fix webapp/src/styles/**/*.{css,scss}",
    "test": "npm run test --workspaces --if-present 1> /dev/null",
    "test_repository": "npm run test -w repository",
    "ts-prune": "ts-prune --error --ignore 'dist|temp'"
  },
  "devDependencies": {
    "@eslint/json": "0.5.0",
    "@stylistic/eslint-plugin": "2.10.1",
    "esbuild": "0.24.0",
    "eslint": "9.12.0",
    "eslint-plugin-react": "7.37.2",
    "eslint-plugin-simple-import-sort": "12.1.1",
    "eslint-plugin-tsdoc": "0.4.0",
    "eslint-plugin-workspaces": "0.10.1",
    "lint-staged": "15.2.9",
    "markdownlint-cli2": "0.14.0",
    "markdownlint-rule-github-internal-links": "0.1.0",
    "markdownlint-rule-relative-links": "3.0.0",
    "prettier": "3.3.3",
    "read-file-utf8": "3.0.0",
    "ts-prune": "0.10.3",
    "typescript-eslint": "8.14.0",
    "write-file-utf8": "3.0.2"
  },
  "lint-staged": {
    "**/*.json": [
      "prettier --write"
    ],
    "**/*.{ts,tsx}": [
      "eslint --fix"
    ],
    "**/*.{css,scss}": [
      "prettier --write",
      "stylelint --fix"
    ]
  },
  "pre-commit": [
    "lint-staged",
    "markdownlint",
    "check_types",
    "test",
    "ts-prune"
  ],
  "prettier": {
    "printWidth": 120
  },
  "workspaces": [
    "api",
    "api-admin",
    "api-auth",
    "api-public",
    "api-stripe-action",
    "api-stripe-webhook",
    "api-user",
    "authentication",
    "backtesting",
    "backtesting-webworker",
    "binance",
    "binance-proxy",
    "cache",
    "database",
    "dflow",
    "email-messages",
    "env",
    "executor",
    "indexeddb",
    "indexeddb-binance",
    "infrastructure",
    "locators",
    "models",
    "repository",
    "s3-data-bucket",
    "stripe",
    "tsconfig",
    "webapp",
    "webstorage"
  ],
  "volta": {
    "node": "20.14.0",
    "npm": "10.8.2"
  }
}
