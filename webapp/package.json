{
  "name": "@workspace/webapp",
  "description": "is the product web application",
  "version": "0.0.0",
  "private": true,
  "type": "module",
  "scripts": {
    "build": "npm run generate_public_files",
    "check_types": "tsc --noEmit --project .",
    "cleanup": "npm run cleanup_public_files; rm -rf dist/ temp/",
    "cleanup_public_files": "rm -rf public/*.css public/*.js public/*.html public/admin/ public/translations/",
    "compile_translations": "npm run formatjs:compile:en",
    "deploy": "sh src/scripts/deploy.sh",
    "formatjs:compile:en": "formatjs compile translations/en.json --ast --out-file public/translations/en.json",
    "generate_css": "npm run sass",
    "generate_formatjs_types": "node temp/scripts/generate_formatjs_types.js",
    "generate_html": "node temp/scripts/generate_html.js",
    "generate_js": "node temp/scripts/generate_js.js",
    "generate_public_files": "npm run compile_translations && npm run generate_html && npm run generate_js && npm run generate_css",
    "lint": "eslint --fix --ext .ts --ext .tsx src/",
    "postcompile_translations": "npm run generate_formatjs_types",
    "precheck_types": "npm run generate_formatjs_types",
    "pregenerate_formatjs_types": "npm run tsc:scripts",
    "pregenerate_public_files": "npm run cleanup_public_files && npm run tsc:scripts",
    "sass": "sass --style=compressed --load-path=../node_modules/ --no-source-map src/styles/main.scss public/main.css",
    "server": "npm run generate_public_files && esbuild --servedir=public",
    "start": "onchange --initial --kill 'translations/*.json' 'src/components/' 'src/contexts/' 'src/flow/' 'src/hooks/' 'src/pages/' 'src/routing/' 'src/styles/' -- npm run server",
    "ts-prune": "ts-prune --ignore 'dist|temp'",
    "tsc:scripts": "tsc --build tsconfig.scripts.json"
  },
  "dependencies": {
    "@workspace/assets": "file:assets",
    "@workspace/binance": "file:binance",
    "@workspace/dflow": "file:dflow",
    "@workspace/env": "file:env",
    "@workspace/locators": "file:locators",
    "@workspace/models": "file:models",
    "@workspace/type-utils": "file:type-utils",
    "@workspace/api": "file:api",
    "@workspace/http": "file:http",
    "@workspace/logging": "file:logging",
    "country-isocode2": "1.1.0",
    "flow-view": "6.0.1",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "react-intl": "6.4.4",
    "trunx": "0.45.3"
  },
  "devDependencies": {
    "@workspace/env": "file:env",
    "@workspace/eslint-config": "file:eslint-config",
    "@workspace/tsconfig": "file:tsconfig",
    "@types/react-dom": "18.2.7",
    "@formatjs/cli": "6.1.3",
    "@workspace/repo": "file:repo",
    "esbuild": "0.17.17",
    "onchange": "7.1.0",
    "sass": "1.64.2",
    "ts-prune": "0.10.3",
    "type-fest": "4.2.0"
  },
  "eslintConfig": {
    "extends": [
      "@workspace/eslint-config/react"
    ],
    "overrides": [
      {
        "files": [
          "*.ts",
          "*.tsx"
        ],
        "rules": {
          "@typescript-eslint/ban-ts-comment": "off",
          "no-warning-comments": "off"
        }
      },
      {
        "files": [
          "src/pages/design/**/*.tsx"
        ],
        "rules": {
          "formatjs/no-literal-string-in-jsx": "off"
        }
      }
    ]
  }
}
